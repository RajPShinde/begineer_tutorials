<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="listener_8cpp" kind="file" language="C++">
    <compoundname>listener.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">std_msgs/String.h</includes>
    <incdepgraph>
      <node id="26">
        <label>src/listener.cpp</label>
        <link refid="listener.cpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ros/ros.h</label>
      </node>
      <node id="28">
        <label>std_msgs/String.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="listener_8cpp_1ae5c0c11b4a60030ee8df1a3ae0b6f758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chatterCallback</definition>
        <argsstring>(const std_msgs::String::ConstPtr &amp;msg)</argsstring>
        <name>chatterCallback</name>
        <param>
          <type>const std_msgs::String::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>function to print LOG message on terminal </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std_msgs::String::ConstPtr&amp;</parametername>
</parameternamelist>
<parameterdescription>
<para>published string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/listener.cpp" line="43" column="1" bodyfile="src/listener.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="listener_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function for Subscriber. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>no of argumnets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>char pointer consisting arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/listener.cpp" line="53" column="1" bodyfile="src/listener.cpp" bodystart="53" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ROS Subscriber Node. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>MIT License, © 2019 Raj Shinde</para></simplesect>
<simplesect kind="author"><para>Raj Shinde </para></simplesect>
<simplesect kind="date"><para>11/10/2019 </para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
</para><sect1 id="test_talker_8cpp_1DESCRIPTION">
<title>DESCRIPTION</title>
<para>A Subscriber node that subscibes to talker </para></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>©<sp/>2019<sp/>Raj<sp/>Shinde</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>Files<sp/>(the<sp/>“Software”),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS”,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/String.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="listener_8cpp_1ae5c0c11b4a60030ee8df1a3ae0b6f758" kindref="member">chatterCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::String::ConstPtr&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;I<sp/>heard:<sp/>[%s]&quot;</highlight><highlight class="normal">,<sp/>msg-&gt;data.c_str());</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listener_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ros::init()<sp/>function<sp/>needs<sp/>to<sp/>see<sp/>argc<sp/>and<sp/>argv<sp/>so<sp/>that<sp/>it<sp/>can<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>can<sp/>perform<sp/>any<sp/>ROS<sp/>arguments<sp/>and<sp/>name<sp/>remapping<sp/>that<sp/>were<sp/>provided<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>command<sp/>line.<sp/>For<sp/>programmatic<sp/>remappings<sp/>you<sp/>can<sp/>use<sp/>a<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>version<sp/>of<sp/>init()<sp/>which<sp/>takes<sp/>remappings<sp/>directly,<sp/>but<sp/>for<sp/>most<sp/>command-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>programs,<sp/>passing<sp/>argc<sp/>and<sp/>argv<sp/>is<sp/>the<sp/>easiest<sp/>way<sp/>to<sp/>do<sp/>it.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>argument<sp/>to<sp/>init()<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>node.<sp/>You<sp/>must<sp/>call<sp/>one<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>versions<sp/>of<sp/>ros::init()<sp/>before<sp/>using<sp/>any<sp/>other<sp/>part<sp/>of<sp/>the<sp/>ROS<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NodeHandle<sp/>is<sp/>the<sp/>main<sp/>access<sp/>point<sp/>to<sp/>communications<sp/>with<sp/>the<sp/>ROS<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>NodeHandle<sp/>constructed<sp/>will<sp/>fully<sp/>initialize<sp/>this<sp/>node,<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>NodeHandle<sp/>destructed<sp/>will<sp/>close<sp/>down<sp/>the<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>n;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>subscribe()<sp/>call<sp/>is<sp/>how<sp/>you<sp/>tell<sp/>ROS<sp/>that<sp/>you<sp/>want<sp/>to<sp/>receive<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>a<sp/>given<sp/>topic.<sp/><sp/>This<sp/>invokes<sp/>a<sp/>call<sp/>to<sp/>the<sp/>ROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>master<sp/>node,<sp/>which<sp/>keeps<sp/>a<sp/>registry<sp/>of<sp/>who<sp/>is<sp/>publishing<sp/>and<sp/>who</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>subscribing.<sp/><sp/>Messages<sp/>are<sp/>passed<sp/>to<sp/>a<sp/>callback<sp/>function,<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>chatterCallback.<sp/><sp/>subscribe()<sp/>returns<sp/>a<sp/>Subscriber<sp/>object<sp/>that<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>hold<sp/>on<sp/>to<sp/>until<sp/>you<sp/>want<sp/>to<sp/>unsubscribe.<sp/><sp/>When<sp/>all<sp/>copies<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Subscriber<sp/>object<sp/>go<sp/>out<sp/>of<sp/>scope,<sp/>this<sp/>callback<sp/>will<sp/>automatically<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unsubscribed<sp/>from<sp/>this<sp/>topic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>parameter<sp/>to<sp/>the<sp/>subscribe()<sp/>function<sp/>is<sp/>the<sp/>size<sp/>of<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>queue.<sp/><sp/>If<sp/>messages<sp/>are<sp/>arriving<sp/>faster<sp/>than<sp/>they<sp/>are<sp/>being<sp/>processed,<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>number<sp/>of<sp/>messages<sp/>that<sp/>will<sp/>be<sp/>buffered<sp/>up<sp/>before<sp/>beginning<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>throw<sp/>away<sp/>the<sp/>oldest<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/>sub<sp/>=<sp/>n.subscribe(</highlight><highlight class="stringliteral">&quot;chatter&quot;</highlight><highlight class="normal">,<sp/>1000,<sp/><ref refid="listener_8cpp_1ae5c0c11b4a60030ee8df1a3ae0b6f758" kindref="member">chatterCallback</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ros::spin()<sp/>will<sp/>enter<sp/>a<sp/>loop,<sp/>pumping<sp/>callbacks.<sp/><sp/>With<sp/>this<sp/>version,<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>callbacks<sp/>will<sp/>be<sp/>called<sp/>from<sp/>within<sp/>this<sp/>thread<sp/>(the<sp/>main<sp/>one).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ros::spin()<sp/>will<sp/>exit<sp/>when<sp/>Ctrl-C<sp/>is<sp/>pressed,<sp/>or<sp/>the<sp/>node<sp/>is<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>master.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/listener.cpp"/>
  </compounddef>
</doxygen>
